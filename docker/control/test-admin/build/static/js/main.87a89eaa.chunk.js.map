{"version":3,"sources":["Main/Jmeter/Create/SlaveConfig/SlaveConfig.js","Main/Jmeter/Create/Create.js","redux/actions.js","redux/actionTypes.js","MyContext.js","MyConsumer.js","Main/Jmeter/Report/GenerateGraph/ReportList/ReportList.js","Main/Jmeter/Report/GenerateGraph/GenerateGraph.js","Main/Jmeter/Report/SlaveLogFiles/SlaveList/SlaveList.js","Main/Jmeter/Report/SlaveLogFiles/SlaveLogs.js","Main/Jmeter/Report/Report.js","Main/Jmeter/Monitor/StopTest/Safely/Safely.js","Main/Jmeter/Monitor/StopTest/StopTest.js","Main/Jmeter/Monitor/TestStatus/TestStatus.js","Main/Jmeter/Monitor/NodeInformation/NodeInformation.js","Main/Jmeter/Monitor/TenantDeletion/TenantDeletion.js","Main/Jmeter/Monitor/Monitor.js","Main/Jmeter/Jmeter.js","Main/Weavescope/WeaveScope.js","Main/Report/Report.js","Main/Grafana/Graphana.js","Main/Chronograf/Chronograf.js","Main/Influxdb/Influxdb.js","Main/Main.js","provider/report.js","MyProvider.js","App.js","redux/reducers/index.js","redux/reducers/report.js","redux/selectors.js","sagas/index.js","serviceWorker.js","index.js","redux/store.js"],"names":["memoryOptions","key","value","text","metaSpace","cpus","ram","SlaveConfig","state","handleChange","e","item","alert","JSON","stringify","props","create","check","name","Container","className","Grid","divided","Row","columns","Column","Header","as","Segment","Dropdown","onChange","this","placeholder","options","Component","bandwidthOptions","CreateTest","open","teststart","bandwidthError","cpuError","jmeterscriptError","maxmetaError","ramError","slavesError","tenantError","testdataError","xmsError","xmxError","bandwidth","cpu","jmeterscript","maxmeta","slaves","tenant","testdata","xms","xmx","formError","loading","dialog","setState","target","files","handleSubmit","preventDefault","error","fileUpload","then","response","console","log","closeModal","configureModal","closeOnEscape","closeOnDimmerClick","file","formData","FormData","append","set","post","headers","textAlign","Form","onSubmit","Message","header","content","Field","required","Button","color","onClick","Modal","style","height","Content","Actions","positive","labelPosition","icon","Select","type","number","diameter","borderWidth","duration","activeColor","borderColor","info","reportFetchTenants","receiveReportTenants","tenants","receivedAt","Date","setMilliseconds","MyContext","React","createContext","MyConsumer","Consumer","dataField","ReportList","items","updateState","row","isSelect","rowIndex","id","date","generateReport","tennantList","Array","isArray","keys","Object","selectRowProp","mode","hideSelectAll","clickToSelect","onSelect","reports","keyField","data","selectRow","pagination","paginationFactory","Divider","GenerateGraph","fetchReportsForTenant","overflow","maxHeight","tenantList","event","connect","ownProps","tl","TenantList","_","map","dispatch","SlaveList","Name","PodIP","getLogs","FileDownload","require","get","SlaveLogs","fetchTestStatus","tennants","AllTenants","Namespace","fetchSlaves","panes","menuItem","render","Tab","Pane","JmeterTestReports","menu","attached","tabular","Safely","stopTest","fetchTenants","StopTest","TestStatus","teststatus","deleted","BeingDeleted","started","Started","concat","NodeInformation","nodes","update","fetchNodes","a","res","TenantDeletion","deleteTenant","Monitor","celled","Jmeter","width","WeaveScope","weaveScopeUrl","src","title","scrolling","Report","graphsUrl","Graphana","graphanaUrl","Chronograf","chronographUrl","Influxdb","influxdbUrl","Main","warning","textalign","fetchSlavesForTenant","tenantId","MyProvider","updateFunctions","fetch","json","report","fetchDashboardURLS","status","DashboardURL","InfluxdbURL","ChronografURL","ReportURL","MonitorURL","dashboard","Provider","children","App","combineReducers","action","reportFetchTenantsSelector","startup","root","fetchPostsApi","put","actions","call","select","selectedTenants","fork","Boolean","window","location","hostname","match","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","runSaga","run","configureStore","rootSaga","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.87a89eaa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Dropdown, Grid, Header, Segment} from \"semantic-ui-react\";\nimport \"./SlaveConfig.css\";\n\n\nconst memoryOptions = [\n    { key: \"1\", value: \"1\", text: \"1 Gigabyte\"},\n    { key: \"2\", value: \"2\", text: \"2 Gigabyte\"},\n    { key: \"3\", value: \"3\", text: \"3 Gigabyte\"},\n    { key: \"4\", value: \"4\", text: \"4 Gigabyte\"},\n    { key: \"5\", value: \"5\", text: \"5 Gigabyte\"},\n    { key: \"6\", value: \"6\", text: \"6 Gigabyte\"}\n];\n\nconst metaSpace = [\n    {key: \"256\", value: \"256\", text: \"256mb\"},\n    {key: \"512\", value: \"512\", text: \"512mb\"},\n    {key: \"768\", value: \"768\", text: \"768mb\"},\n    {key: \"1024\", value: \"1024\", text: \"1024mb\"},\n    {key: \"1280\", value: \"1280\", text: \"1280mb\"},\n    {key: \"1536\", value: \"1536\", text: \"1536mb\"},\n];\n\nconst cpus = [\n    { key: \"1\", value: \"1\", text: \"1 CPU\"},\n    { key: \"2\", value: \"2\", text: \"2 CPU\"},\n    { key: \"3\", value: \"3\", text: \"3 CPU\"},\n    { key: \"4\", value: \"4\", text: \"4 CPU\"}\n];\n\nconst ram = [\n    { key: \"1\", value: \"1\", text: \"1 Gigabyte\"},\n    { key: \"2\", value: \"2\", text: \"2 Gigabyte\"},\n    { key: \"3\", value: \"3\", text: \"3 Gigabyte\"},\n    { key: \"4\", value: \"4\", text: \"4 Gigabyte\"},\n    { key: \"5\", value: \"5\", text: \"5 Gigabyte\"},\n    { key: \"6\", value: \"6\", text: \"6 Gigabyte\"},\n    { key: \"7\", value: \"7\", text: \"7 Gigabyte\"},\n    { key: \"8\", value: \"8\", text: \"8 Gigabyte\"},\n    { key: \"9\", value: \"9\", text: \"9 Gigabyte\"},\n    { key: \"10\", value: \"10\", text: \"10 Gigabyte\"},\n    { key: \"11\", value: \"11\", text: \"11 Gigabyte\"},\n    { key: \"12\", value: \"12\", text: \"12 Gigabyte\"},\n    { key: \"13\", value: \"13\", text: \"13 Gigabyte\"},\n    { key: \"14\", value: \"14\", text: \"14 Gigabyte\"}\n\n]\n\nclass SlaveConfig extends Component {\n    state = {};\n\n    handleChange = (e, item) => {\n        alert(JSON.stringify(item.value));\n\n        this.props.create.check(item.name, item.value);\n    }\n    render() {\n      return (\n        <Container className=\"Jmeter-Wrapper\">\n        <Grid divided=\"vertically\">\n          <Grid.Row columns={2}>\n            <Grid.Column>\n            <Header as=\"h1\">JVM Settings</Header>\n            <Segment>\n                <label>Initial Memory allocation (Xms):</label>\n            <Dropdown  name=\"xms\" onChange={this.props.create.handleChange} placeholder=\"Select Memory allocation (Xms)\" options={memoryOptions} />\n            </Segment>\n           <Segment>\n           <label>Maximum Memory allocation (Xmx):</label>\n            <Dropdown name=\"xmx\" onChange={this.props.create.handleChange} placeholder=\"Select Maximum Memory allocation (Xmx)\" options={memoryOptions} />\n            </Segment>\n           <Segment> \n           <label>Control Garbage Collection  (MaxMetaspaceSize):</label>\n            <Dropdown name=\"maxmeta\" onChange={this.props.create.handleChange} placeholder=\"Select (MaxMetaspaceSize)\" options={metaSpace} />\n            </Segment>\n            </Grid.Column>\n            <Grid.Column>\n            <Header as=\"h1\">Node Settings</Header>\n            <Segment>\n            <label>Allocate cpu:</label>\n            <Dropdown name=\"cpu\" onChange={this.props.create.handleChange} placeholder=\"Select Cpu\" options={cpus} />\n            </Segment>\n            <Segment>\n            <label>Allocate Bandwidth:</label>\n            <Dropdown name=\"ram\" onChange={this.props.create.handleChange} placeholder=\"Select Bandwidth\" options={ram} />\n            </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n   \n        );\n    }\n  }\n  \n  export default SlaveConfig;","import React, { Component, useState } from \"react\";\nimport { post } from \"axios\";\nimport ActivityIndicator from 'react-activity-indicator'\nimport {\n  Button,\n  Container,\n  Header,\n  Form,\n  Message,\n  Modal,\n} from \"semantic-ui-react\";\nimport SlaveConfig from \"./SlaveConfig/SlaveConfig\";\nimport \"./Create.css\";\n\n\nconst bandwidthOptions = [\n  { key: \"adsl\", value: \"adsl\", text: \"ADSL : 8 Mbit/s\" },\n  { key: \"adsl2\", value: \"adsl2\", text: \"ADSL2 : 12 Mbit/s\" },\n  { key: \"adsl2Plus\", value: \"adsl2Plus\", text: \"ADSL2+ : 24 Mbit/s\" },\n  {\n    key: \"ethernetLan\",\n    value: \"ethernetLan\",\n    text: \"Ethernet LAN ; 10 Mbit/s\",\n  },\n  {\n    key: \"fastEthernet\",\n    value: \"fastEthernet\",\n    text: \"Fast Ethernet : 100 Mbit/s\",\n  },\n  {\n    key: \"gigabitEthernet\",\n    value: \"gigabitEthernet\",\n    text: \"Gigabit Ethernet : 1 Gbit/s\",\n  },\n  {\n    key: \"10gigabitEthernet\",\n    value: \"10gigabitEthernet\",\n    text: \"10 Gigabit Ethernet : 10 Gbit/s\",\n  },\n  {\n    key: \"100gigabitEthernet\",\n    value: \"100gigabitEthernet\",\n    text: \"100 Gigabit Ethernet : 100 Gbit/s\",\n  },\n  {\n    key: \"mobileDataEdge\",\n    value: \"mobileDataEdge\",\n    text: \"Mobile data EDGE : 384 kbit/s\",\n  },\n  {\n    key: \"mobileDatacHspaPlus\",\n    value: \"mobileDatacHspaPlus\",\n    text: \"Mobile data HSPA+ : 21 Mbp/s\",\n  },\n  {\n    key: \"mobileDataHspa\",\n    value: \"mobileDataHspa\",\n    text: \"Mobile data HSPA : 14,4 Mbp/s\",\n  },\n  {\n    key: \"mobileDataDcHspaPlus\",\n    value: \"mobileDataDcHspaPlus\",\n    text: \"Mobile data DC-HSPA+ : 42 Mbps\",\n  },\n  {\n    key: \"mobileDataLte\",\n    value: \"mobileDataLte\",\n    text: \"Mobile data LTE : 150 Mbp/s\",\n  },\n  {\n    key: \"mobileDataGprs\",\n    value: \"mobileDataGprs\",\n    text: \"Mobile data GPRS : 171 kbit/s\",\n  },\n  {\n    key: \"wifi80211a\",\n    value: \"wifi80211a\",\n    text: \"WIFI 802.11a/g : 54 Mbit/s\",\n  },\n  { key: \"wifi80211n\", value: \"wifi80211n\", text: \"WIFI 802.11n : 600 Mbit/s\" },\n];\n\nclass CreateTest extends Component {\n  state = {\n    open: false,\n    teststart: false,\n    bandwidthError: false,\n    cpuError: false,\n    jmeterscriptError: false,\n    maxmetaError: false,\n    ramError: false,\n    slavesError: false,\n    tenantError: false,\n    testdataError: false,\n    xmsError: false,\n    xmxError: false,\n    bandwidth: \"\",\n    cpu: \"\",\n    jmeterscript: \"\",\n    maxmeta: \"\",\n    ram: \"\",\n    slaves: \"\",\n    tenant: \"\",\n    testdata: \"\",\n    xms: \"\",\n    xmx: \"\",\n    formError: false,\n    loading: false,\n    dialog: 'nothing'\n  };\n\nconstructor(props) {\n  super(props);\n  this.state = { loading: false };\n}\n\n  handleChange = (e, item) => {\n    this.setState({loading: false})\n    if (item) {\n      this.setState({ [item.name]: item.value });\n    } else {\n      if (e.target.name === \"jmeterscript\" || e.target.name === \"testdata\") {\n        this.setState({ [e.target.name]: e.target.files[0] });\n      } else {\n        this.setState({ [e.target.name]: e.target.value });\n      }\n    }\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let error = false;\n    if (this.state.bandwidth === \"\") {\n      this.setState({ bandwidthError: true });\n      error = true;\n    } else {\n      this.setState({ bandwidthError: false });\n    }\n    if (this.state.cpu === \"\") {\n      this.setState({ cpuError: true });\n      error = true;\n    } else {\n      this.setState({ cpuError: false });\n    }\n\n    if (this.state.jmeterscript === \"\") {\n      this.setState({ jmeterscriptError: true });\n      error = true;\n    } else {\n      this.setState({ jmeterscriptError: false });\n    }\n\n    if (this.state.maxmeta === \"\") {\n      this.setState({ maxmetaError: true });\n      error = true;\n    } else {\n      this.setState({ maxmetaError: false });\n    }\n\n    if (this.state.ram === \"\") {\n      this.setState({ ramError: true });\n      error = true;\n    } else {\n      this.setState({ ramError: false });\n    }\n\n    if (this.state.tenant === \"\") {\n      this.setState({ tenantError: true });\n      error = true;\n    } else {\n      this.setState({ tenantError: false });\n    }\n\n    /*\n    if (this.state.testdata === \"\") {\n      this.setState({ testdataError: true });\n      error = true;\n    } else {\n      this.setState({ testdataError: false });\n    }\n    */\n\n    if (this.state.xms === \"\") {\n      this.setState({ xmsError: true });\n      error = true;\n    } else {\n      this.setState({ xmsError: false });\n    }\n\n    if (this.state.xmx === \"\") {\n      this.setState({ xmxError: true });\n      error = true;\n    } else {\n      this.setState({ xmxError: false });\n    }\n\n    if (this.state.slaves === \"\") {\n      this.setState({ slavesError: true });\n      error = true;\n    } else {\n      this.setState({ slavesError: false });\n    }\n\n    if (error === true) {\n      this.setState({ formError: true });\n    } else {\n\n      if (this.state.dialog === 'do-nothing') {\n        this.setState({ formError: false });\n        this.fileUpload().then((response) => {\n          this.setState({ teststart: true });\n          console.log(\"response from call:\", response)\n          this.setState({ loading: false});\n        });\n        console.log(\"---------- DANG\")\n      } else {\n        this.setState({dialog: 'do-nothing'})\n        console.log(\"---- do thing\")\n      }\n    }\n  };\n\n  fileUpload(file) {\n    const url = \"/start-test\";\n    const formData = new FormData();\n    formData.append(\"context\", this.state.tenant);\n    formData.append(\"numberOfNodes\", this.state.slaves);\n    formData.append(\"jmeter\", this.state.jmeterscript);\n    formData.append(\"data\", this.state.testdata);\n    formData.set(\"xmx\", this.state.xmx);\n    formData.set(\"xms\", this.state.xms);\n    formData.set(\"cpu\", this.state.cpu);\n    formData.set(\"ram\", this.state.ram);\n    formData.set(\"maxMetaspaceSize\", this.state.maxmeta);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    this.setState( {loading: true});\n    console.log(\"-------- DOODANG\")\n    return post(url, formData, config);\n  }\n\n  closeModal = () => {\n    this.setState({ open: false });\n    this.setState({ formError: false });\n    this.setState({dialog: 'close'})\n  };\n\n  configureModal = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({ open: true });\n    this.setState({dialog: 'open'})\n  };\n\n  render() {\n    const { open } = this.state;\n    return (\n      \n      <Container className=\"CreateTest-Wrapper\">\n        <Container textAlign=\"center\">\n          <Header as=\"h1\">Create Test</Header>\n        </Container>\n\n        <Form error={this.state.formError} onSubmit={this.handleSubmit}>\n          {this.state.formError ? (\n            <Message\n              error\n              header=\"Test Creation Error\"\n              content=\"Please make sure you have supplied all data\"\n            />\n          ) : null}\n          <Form.Field required>\n            <label>Tennant</label>\n            <input\n              name=\"tenant\"\n              onChange={this.handleChange}\n              placeholder=\"Tennat\"\n            />\n            <small>This is the tenant in which you want to run the tests</small>\n          </Form.Field>\n          <Form.Field required>\n            <label>Number of jmeter Slaves</label>\n            <input\n              name=\"slaves\"\n              onChange={this.handleChange}\n              placeholder=\"Slaves\"\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Settings for Jmeter slaves</label>\n            <Button color=\"blue\" onClick={this.configureModal(true, false)}>\n              Configure Slaves\n            </Button>\n\n            <Modal style={{ height: \"fit-content\" }} open={open}>\n              <Modal.Header>SlaveConfiguration</Modal.Header>\n              <Modal.Content>\n                <SlaveConfig create={this} />\n              </Modal.Content>\n              <Modal.Actions>\n                <Button\n                  positive\n                  onClick={this.closeModal}\n                  labelPosition=\"right\"\n                  icon=\"checkmark\"\n                  content=\"Done\"\n                />\n              </Modal.Actions>\n            </Modal>\n          </Form.Field>\n          <Form.Field required>\n          <label>Select Bandwidth</label>\n          \n          <Form.Select\n            name=\"bandwidth\"\n            placeholder=\"select bandwidth\"\n            onChange={this.handleChange}\n            options={bandwidthOptions}\n          />\n          </Form.Field>\n          <Form.Field required>\n            <label>Jmeter Test Script</label>\n            <input\n              name=\"jmeterscript\"\n              onChange={this.handleChange}\n              type=\"file\"\n            />\n            <small>This is the Jmeter script to upload</small>\n          </Form.Field>\n          <Form.Field>\n            <label>Test Data</label>\n            <input name=\"testdata\" onChange={this.handleChange} type=\"file\" />\n            <small>This is the data file used by the test</small>\n          </Form.Field>\n\n          {this.state.loading ? (\n          <ActivityIndicator\n          number={5}\n          diameter={40}\n          borderWidth={1}\n          duration={300}\n          activeColor=\"#66D9EF\"\n          borderColor=\"white\"\n          borderWidth={5}\n          borderRadius=\"50%\" \n      />\n          ) : <Button color=\"blue\" type=\"submit\">\n          Run Tests\n        </Button>}\n          \n        </Form>\n        {this.state.teststart ? (\n          <Message info header={this.state.tenant} content=\"Started Test\" />\n        ) : null}\n      </Container>\n    );\n  }\n}\n\nexport default CreateTest;\n","import { REPORT_FETCH_TENANTS, RECEIVE_REPORT_TENANTS, FETCH_LOGS_FOR_SLAVE, RECEIVE_LOGS_FOR_SLAVE } from './actionTypes';\n\nfunction fetchSlavesForTenant() {\n  console.log(\" DISPATH: fetchSlavesForTenant\");\n    return {\n        type: FETCH_LOGS_FOR_SLAVE\n    };\n}\n\nfunction reportFetchTenants() {\n  console.log(\" DISPATH: reportFetchTenants\");\n    return {\n        type: REPORT_FETCH_TENANTS\n    };\n}\n\nfunction receiveReportTenants(tenants) {\n  console.log(\" rexeice: receiveReportTenants\");\n    return {\n      type: RECEIVE_REPORT_TENANTS,\n      tenants,\n      receivedAt: new Date().setMilliseconds(0),\n    }\n}\n\nfunction receiveSlavesForTenant(slaves) {\n  console.log(\" rexeice: receiveSlavesForTenant\");\n    return {\n      type: RECEIVE_LOGS_FOR_SLAVE,\n      slaves,\n      receivedAt: new Date().setMilliseconds(0),\n    }\n  }\n\n  export {\n    receiveSlavesForTenant,\n    receiveReportTenants,\n    reportFetchTenants,\n    fetchSlavesForTenant\n  }\n","export const REPORT_FETCH_TENANTS = 'REPORT_FETCH_TENANTS';\nexport const RECEIVE_REPORT_TENANTS = 'RECEIVE_REPORT_TENANTS';\nexport const RECEIVE_LOGS_FOR_SLAVE = 'RECEIVE_LOGS_FOR_SLAVE';\nexport const FETCH_LOGS_FOR_SLAVE = 'FETCH_LOGS_FOR_SLAVE';\n\n","import React from 'react';\n\nconst MyContext = React.createContext({});\n\nexport default MyContext;","import MyContext from \"./MyContext\";\n\nconst MyConsumer = MyContext.Consumer;\n\nexport default MyConsumer;\n","import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport MyConsumer from \"../../../../../MyConsumer\";\nimport { post } from \"axios\";\nimport { Button, Divider } from \"semantic-ui-react\";\nimport \"./ReportList.css\";\nconst columns = [\n  {\n    dataField: \"id\",\n    text: \"id\",\n  },\n  {\n    dataField: \"date\",\n    text: \"date\",\n  },\n];\n\nexport class ReportList extends Component {\n  state = {\n    items: {},\n  };\n\n  updateState = (row, isSelect, rowIndex, e) => {\n    this.setState((state) => {\n      let items = this.state.items;\n      if (isSelect) {\n        items[row.id] = row.date;\n      } else {\n        delete items[row.id];\n      }\n      return {\n        items: items,\n      };\n    });\n\n    return true;\n  };\n\n  generateReport = () => {\n\n    let tennantList = \"\";\n    if (Array.isArray(this.state.items)) {\n      tennantList = this.state.items;\n    } else {\n    var keys = Object.keys( this.state.items )\n      tennantList = this.state.items[keys[0]];\n    }\n\n    \n    if (typeof this.state.items !== 'undefined') {\n      const formData = new FormData();\n      formData.set(\"data\", tennantList);\n      formData.set(\"tenant\", this.props.tenant);\n      \n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n      post(\"/genReport\", formData, config).then((response) => {\n        console.log(response);\n      });\n\n    }\n  };\n  selectRowProp = {\n    mode: \"checkbox\", // single row selection\n    hideSelectAll: true,\n    clickToSelect: true,\n    onSelect: this.updateState,\n  };\n  componentDidMount() {}\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ reports }) => (\n          <div key=\"lost\">\n            <BootstrapTable\n              //  classes=\"reportlist\"\n              keyField=\"id\"\n              data={reports}\n              selectRow={this.selectRowProp}\n              columns={columns}\n              pagination={paginationFactory()}\n            />\n            <Divider />\n            <Button color=\"blue\" onClick={this.generateReport}>\n              Generate Report\n            </Button>\n          </div>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default ReportList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dropdown, Divider, Segment } from \"semantic-ui-react\";\nimport { reportFetchTenants } from \"../../../../redux/actions\";\nimport ReportList from \"./ReportList/ReportList\";\nimport \"./GenerateGraph.css\";\nimport _ from \"lodash\";\nimport MyConsumer from \"../../../../MyConsumer\";\n\nclass GenerateGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.reportFetchTenants();\n  }\n\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ fetchReportsForTenant }) => (\n          <div>\n            <Segment style={{overflow: 'auto', maxHeight: '100vh' }} divided=\"true\">\n              <Dropdown\n                placeholder=\"Select tenant\"\n                options={this.props.tenantList}\n                onChange={(event, data) => {\n                  this.setState({ tenant: data.value });\n                  fetchReportsForTenant(data.value);\n                }}\n              />\n              <Divider />\n              <ReportList tenant={this.state.tenant} />\n            </Segment>\n          </div>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\n/*\nGenerateGraph.propTypes = {\n  reportTenants: PropTypes.object.isRequired,\n};\n*/\n\nfunction mapStateToProps(state, ownProps) {\n  const { reportFetchTenants } = state;\n  let tl = reportFetchTenants.TenantList;\n\n  let con = _.map(tl, function (item) {\n    return { key: item, value: item, text: item };\n  });\n  // component receives additionally:\n  return { tenantList: con };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  reportFetchTenants: () => dispatch(reportFetchTenants()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenerateGraph);\n","import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport MyConsumer from \"../../../../../MyConsumer\";\nimport { get } from \"axios\";\nimport { Button, Divider } from \"semantic-ui-react\";\nimport \"./SlaveList.css\";\nconst columns = [\n  {\n    dataField: \"Name\",\n    text: \"Name\",\n  },\n  {\n    dataField: \"PodIP\",\n    text: \"PodIP\",\n  },\n  {\n    dataField: \"Phase\",\n    text: \"Phase\",\n  },\n];\n\nexport class SlaveList extends Component {\n  state = {\n    slaves: {},\n  };\n\n  updateState = (row, isSelect, rowIndex, e) => {\n    this.setState((state) => {\n      let items = this.state.slaves;\n      if (isSelect) {\n        items[row.Name] = row.PodIP;\n      } else {\n        delete items[row.Name];\n      }\n      return {\n        slaves: items,\n      };\n    });\n\n    return true;\n  };\n\n  getLogs = () => {\n    let slaves = \"\";\n    if (Array.isArray(this.state.slaves)) {\n      slaves = this.state.slaves;\n    } else {\n      var keys = Object.keys( this.state.slaves )\n      slaves = this.state.slaves[keys[0]];\n    }\n   \n    if (typeof this.state.slaves !== 'undefined') {\n      const FileDownload = require(\"js-file-download\");\n      get(\"/test-output?ip=\"+slaves).then((response) => {\n        var keys = Object.keys( this.state.slaves )\n        FileDownload(response.data,keys[0]+\".log\")\n      });\n\n    }\n  };\n  selectRowProp = {\n    mode: \"checkbox\", // single row selection\n    hideSelectAll: true,\n    clickToSelect: true,\n    onSelect: this.updateState,\n  };\n  componentDidMount() {}\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ slaves }) => (\n          <div>\n            <BootstrapTable\n              //  classes=\"reportlist\"\n              keyField=\"Name\"\n              data={slaves}\n              selectRow={this.selectRowProp}\n              columns={columns}\n              pagination={paginationFactory()}\n            />\n            <Divider />\n            <Button color=\"blue\" onClick={this.getLogs}>\n              Get Logs\n            </Button>\n          </div>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default SlaveList;\n","import React, { Component } from \"react\";\nimport { Dropdown, Divider, Segment } from \"semantic-ui-react\";\nimport { get } from \"axios\";\nimport \"./SlaveLogs.css\";\nimport _ from \"lodash\";\nimport MyConsumer from \"../../../../MyConsumer\";\nimport SlaveList from \"./SlaveList/SlaveList\";\n\nclass SlaveLogs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { tennants: [] };\n  }\n\n  componentDidMount() {\n    this.fetchTestStatus();\n  }\n\n  fetchTestStatus = () => {\n    get(\"/tenants\").then((response) => {\n      let tennants = response.data.AllTenants;\n\n      let AllTenants = _.map(tennants, function (item) {\n        return {\n          key: item.Namespace,\n          value: item.Namespace,\n          text: item.Name + \"@\" + item.Namespace,\n        };\n      });\n      this.setState({ tennants: AllTenants });\n      //  this.setState({teststatus: status});\n    });\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ fetchSlaves }) => (\n          <div>\n              <Segment style={{overflow: 'auto', maxHeight: '100vh' }}>\n                <Dropdown\n                  placeholder=\"Select tennet\"\n                  options={this.state.tennants}\n                  onChange={(event, data) => {\n                    fetchSlaves(data.value);\n                  }}\n                />\n      \n            \n              <Divider />\n              <SlaveList tenant={this.state.slaves} />\n              </Segment>\n                  </div>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default SlaveLogs;\n","import React, {Component} from 'react';\nimport {\n  Container, \n  Header, \n  Tab \n} from 'semantic-ui-react';\nimport GenerateGraph from './GenerateGraph/GenerateGraph';\nimport SlaveLogs from './SlaveLogFiles/SlaveLogs';\nimport './Report.css';\n\n\nconst panes = [\n  { menuItem: 'Generate Graphs', render: () => <Tab.Pane><GenerateGraph/></Tab.Pane> },\n  { menuItem: 'JMeter Log Files', render: () => <Tab.Pane><SlaveLogs/></Tab.Pane> }\n]\n\nclass JmeterTestReports extends Component {\n  state = {}\n    render() {\n      return (\n        <Container className=\"Main-Wrapper\" >\n          <Container textAlign='center' ><Header as=\"h1\">Jmeter Test Reports</Header></Container>\n          <Tab  menu={{ color: 'blue', attached: true, tabular: true }} panes={panes} />\n        </Container>\n      );\n    }\n  }\n\nexport default JmeterTestReports;","import React, { Component } from \"react\";\nimport { post, get } from \"axios\";\nimport {\n  Container,\n  Button,\n  Dropdown,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"./Safely.css\";\nimport _ from \"lodash\";\n\nclass Safely extends Component {\n  state = { tennants: [] };\n\n  componentDidMount() {\n    this.fetchTenants();\n  }\n\n  stopTest = () => {\n    if (this.state.value) {\n      const url = \"/stop-test\";\n      const formData = new FormData();\n      formData.set(\"StopContext\", this.state.value);\n\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n      post(url, formData, config).then((response) => {\n        console.log(response);\n      });\n    }\n  };\n\n  handleChange = (e, { value }) => this.setState({ value });\n  fetchTenants = () => {\n    get(\"/tenants\").then((response) => {\n      let tennants = response.data.AllTenants;\n      let AllTenants = _.map(tennants, function (item) {\n        return { key: item.Namespace, value: item.Namespace, text: item.Namespace };\n      });\n      this.setState({ tennants: AllTenants });\n    });\n  };\n  render() {\n    return (\n      <Container className=\"Main-Wrapper\">\n        <Segment>\n          <Dropdown\n            onChange={this.handleChange}\n            placeholder=\"Select Tenant to Stop\"\n            options={this.state.tennants}\n          />\n        </Segment>\n        <Segment>\n          <Button color=\"blue\" onClick={this.stopTest}> Stop Test Safely</Button>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default Safely;\n","import React, {Component} from 'react';\nimport {\n  Container, \n  Header, \n  Tab \n} from 'semantic-ui-react';\nimport Safely from './Safely/Safely';\n//import ForceStop from './ForceStop/ForceStop';\nimport './StopTest.css';\n\n\nconst panes = [\n  { menuItem: 'Safely', render: () => <Tab.Pane><Safely/></Tab.Pane> },\n  //{ menuItem: 'Force', render: () => <Tab.Pane><ForceStop/></Tab.Pane> }\n]\n\nclass StopTest extends Component {\n  state = {}\n    render() {\n      return (\n        <Container className=\"Main-Wrapper\">\n          <Container textAlign='center'><Header as=\"h1\">Stop Tests</Header></Container>\n          <Tab  menu={{ color: 'blue', attached: true, tabular: true }} panes={panes} />\n        </Container>\n      );\n    }\n  }\n\nexport default StopTest;","import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { get } from \"axios\";\nimport { Container, Button, Header } from \"semantic-ui-react\";\nimport \"./TestStatus.css\";\n\nconst columns = [\n  {\n    dataField: \"Tenant\",\n    text: \"Tenant\",\n  },\n  {\n    dataField: \"Started\",\n    text: \"Started\",\n  },\n  {\n    dataField: \"Errors\",\n    text: \"Message\",\n  },\n];\n\nclass TestStatus extends Component {\n  state = { teststatus: [] };\n\n  fetchTestStatus = () => {\n    get(\"/test-status\").then((response) => {\n      let deleted = response.data.BeingDeleted;\n      let started = response.data.Started;\n      if (started && deleted) {\n        this.setState({ teststatus: started.concat(deleted) });\n      } else if (started) {\n        this.setState({ teststatus: started });\n      } else if (deleted) {\n        this.setState({ teststatus: deleted });\n      } else {\n        this.setState({ teststatus: [] });\n      }\n    });\n  };\n  render() {\n    return (\n      <Container className=\"Main-Wrapper\">\n        <Container textAlign=\"center\">\n          <Header as=\"h1\">Test Status</Header>\n        </Container>\n        <BootstrapTable\n          //  classes=\"reportlist\"\n          keyField=\"Tenant\"\n          data={this.state.teststatus}\n          columns={columns}\n        />\n        <Button color=\"blue\" onClick={this.fetchTestStatus}> Fetch Test Status</Button>\n      </Container>\n    );\n  }\n}\n\nexport default TestStatus;\n","import React, {Component} from 'react';\nimport { get } from \"axios\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Button, Divider } from \"semantic-ui-react\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n\nimport './NodeInformation.css';\nimport { runSaga } from '@redux-saga/core';\nconst columns = [\n  {\n    dataField: \"Name\",\n    text: \"Node\",\n  },\n  {\n    dataField: \"InstanceID\",\n    text: \"Instance ID\",\n  },\n  {\n    dataField: \"Phase\",\n    text: \"Phase\",\n  },\n  {\n    dataField: \"NodeConditions\",\n    text: \"NodeConditions\",\n  },\n];\n\nexport class NodeInformation extends Component {\n  \n  state = {\n    nodes: [],\n    update: false\n  }\n\n  fetchNodes = async () => {\n    get(\"/failing-nodes\").then((res) => {\n      this.setState({nodes: res.data})\n    })\n  };\n\n  render() {\n    return (\n      <div>\n            <BootstrapTable\n              keyField=\"InstanceID\"\n              data={this.state.nodes}\n              columns={columns}\n              pagination={paginationFactory()}\n            />\n            <Divider/>\n            <Button color=\"blue\" onClick={this.fetchNodes}>Fetch Node Details</Button>\n          </div>\n    );\n  }\n}\n\nexport default NodeInformation;\n","import React, { Component } from \"react\";\nimport { post, get } from \"axios\";\nimport {\n  Container,\n  Button,\n  Dropdown,\n  Header,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"./TenantDeletion.css\";\nimport _ from \"lodash\";\n\nclass TenantDeletion extends Component {\n  state = { tennants: [] };\n\n  componentDidMount() {\n    this.fetchTestStatus();\n  }\n\n  deleteTenant = () => {\n    if (this.state.value) {\n      const url = \"/delete-tenant\";\n      const formData = new FormData();\n      formData.set(\"TenantContext\", this.state.value);\n\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n      post(url, formData, config).then((response) => {\n        console.log(response);\n      });\n    }\n  };\n\n  handleChange = (e, { value }) => this.setState({ value });\n  fetchTestStatus = () => {\n    get(\"/tenants\").then((response) => {\n      let tennants = response.data.AllTenants;\n\n      let AllTenants = _.map(tennants, function (item) {\n        return { key: item.Namespace, value: item.Namespace, text: item.Namespace };\n      });\n      this.setState({ tennants: AllTenants });\n    });\n  };\n  render() {\n    return (\n      <Container className=\"Main-Wrapper\">\n        <Container textAlign=\"center\">\n          <Header as=\"h1\">Tenant Deletion</Header>\n        </Container>\n        <Segment>\n          <Dropdown\n            onChange={this.handleChange}\n            placeholder=\"Select Tenant to Delete\"\n            options={this.state.tennants}\n          />\n        </Segment>\n        <Segment>\n          <Button color=\"blue\" onClick={this.deleteTenant}> Delete Selected Tenant</Button>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default TenantDeletion;\n","import React, { Component } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport StopTest from \"./StopTest/StopTest\";\nimport TestStatus from \"./TestStatus/TestStatus\";\nimport NodeInformation from \"./NodeInformation/NodeInformation\";\nimport TenantDeleton from \"./TenantDeletion/TenantDeletion\";\nimport \"./Monitor.css\";\n\nclass Monitor extends Component {\n  state = {};\n  render() {\n    return (\n      <Grid celled=\"internally\" columns={1}>\n        <Grid.Row>\n          <Grid.Column>\n            <TenantDeleton />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <StopTest />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <TestStatus />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column style={{ overflow: \"auto\" }}>\n            <NodeInformation />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default Monitor;\n","import React, { Component } from \"react\";\nimport { Container, Grid } from \"semantic-ui-react\";\nimport CreateTest from './Create/Create';\nimport JmeterTestReports from './Report/Report';\nimport Monitor from './Monitor/Monitor';\nimport \"./Jmeter.css\";\n\nclass Jmeter extends Component {\n  state = {};\n  render() {\n    return (\n      <Container style={{width: 'fit-content'}} className=\"Jmeter-Wrapper\">\n        <Grid divided>\n          <Grid.Row columns={3} style={{height: '70%'}}>\n            <Grid.Column>\n            <JmeterTestReports style={{height: '100%'}}/>\n            </Grid.Column>\n            <Grid.Column>\n             <CreateTest/>\n            </Grid.Column>\n            <Grid.Column>\n             <Monitor/>\n            </Grid.Column>\n          </Grid.Row>\n\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default Jmeter;\n","import React, { Component } from \"react\";\n\nimport MyConsumer from \"../../MyConsumer\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./WeaveScope.css\";\n\nexport class WeaveScope extends Component {\n  state = {\n    items: {},\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ weaveScopeUrl }) => (\n          <Segment className=\"Weavescope\">\n            <iframe src={weaveScopeUrl} width=\"100%\" height=\"100%\" title=\"Weave Scope\" scrolling=\"auto\" >\n                Kubernetes Monitor\n            </iframe>\n          </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default WeaveScope;\n","import React, { Component } from \"react\";\n\nimport MyConsumer from \"../../MyConsumer\";\nimport \"./Report.css\";\nimport { Segment } from \"semantic-ui-react\";\n\nexport class Report extends Component {\n  state = {\n    items: {},\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ graphsUrl }) => (\n          <Segment className=\"Report\">\n            <object data={graphsUrl} width=\"100%\" height=\"100%\">\n              Generated Reports\n            </object>\n          </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default Report;\n","import React, { Component } from \"react\";\nimport MyConsumer from \"../../MyConsumer\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./Graphana.css\";\n\nexport class Graphana extends Component {\n  state = {\n    items: {},\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ graphanaUrl }) => (\n          <Segment className=\"Graphana\">\n            <iframe data={graphanaUrl} width=\"100%\" height=\"100%\" title=\"Graphana\" >\n              Grafana Dashboard\n            </iframe>\n          </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default Graphana;\n","import React, { Component } from \"react\";\n\nimport MyConsumer from \"../../MyConsumer\";\nimport {\n  Segment \n} from 'semantic-ui-react';\nimport \"./Chronograf.css\";\n\nexport class Chronograf extends Component {\n  state = {\n    items: {}\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ chronographUrl }) => (\n          <Segment className=\"Chronograf\">\n    <iframe src={ chronographUrl} width=\"100%\" height=\"100%\" title=\"Chronograf\" >\n    </iframe>\n    </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default Chronograf;\n","import React, { Component } from \"react\";\nimport MyConsumer from \"../../MyConsumer\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./Influxdb.css\";\n\nexport class Influxdb extends Component {\n  state = {\n    items: {},\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ influxdbUrl }) => (\n          <Segment className=\"Influxdb\">\n            <iframe src={influxdbUrl} width=\"100%\" height=\"100%\" title=\"Influxdb\" scrolling=\"auto\" >\n              Influxdb Dashboard\n            </iframe>\n          </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default Influxdb;\n","import React, {Component} from 'react';\nimport {\n  Container, \n  Header, \n  Message, \n  Tab \n} from 'semantic-ui-react';\nimport Jmeter from './Jmeter/Jmeter';\nimport WeaveScope from './Weavescope/WeaveScope';\nimport Report from './Report/Report';\nimport Graphana from './Grafana/Graphana';\nimport ChronografContainer from './Chronograf/Chronograf';\nimport InfluxdbContainer from './Influxdb/Influxdb';\nimport './Main.css';\n\n\nconst panes = [\n  { menuItem: 'Jmeter', render: () => <Tab.Pane><Jmeter/></Tab.Pane> },\n  { menuItem: 'Influxdb', render: () => <Tab.Pane><InfluxdbContainer/></Tab.Pane> },\n  { menuItem: 'Chronograf', render: () => <Tab.Pane><ChronografContainer/></Tab.Pane> },\n  { menuItem: 'Graphana', render: () => <Tab.Pane><Graphana/></Tab.Pane> },\n  { menuItem: 'Weavscope', render: () => <Tab.Pane><WeaveScope/></Tab.Pane> },\n  { menuItem: 'Report', render: () => <Tab.Pane><Report/></Tab.Pane> },\n]\n\nclass Main extends Component {\n  state = {}\n    render() {\n      return (\n        <Container style={{ width: 'auto'}}className=\"Main-Wrapper\">\n          <Container textAlign='center'><Header as=\"h1\">Kubernetes Load Test Rig</Header></Container>\n          <Container className=\"Message-wrapper\" textAlign='center'>\n          <Message warning>\n            <Message.Header textalign=\"center\"> Embedding grafana triggers firefox security!</Message.Header>\n            <p>\n              https://stackoverflow.com/questions/11768221/firefox-websocket-security-issue/12042843#12042843\n                It works fine in chrome.\n            </p>\n          </Message>\n          </Container>\n    \n          <Tab  menu={{ color: 'blue', attached: true, tabular: true }} panes={panes} />\n        </Container>\n      );\n    }\n  }\n\nexport default Main;","import fetch from \"isomorphic-fetch\";\nimport { get } from \"axios\";\n\nconst fetchPostsApi = () => {\n  let data = fetch(\"/tenants\").then(function (response) {\n    return response.json();\n  });\n\n  return data;\n};\n\nconst fetchReportByTenant = (tenantId) => {\n  let data = fetch(\"/tenantReport?tenant=\" + tenantId).then(function (\n    response\n  ) {\n    return response.json();\n  });\n\n  return data;\n};\n\nconst fetchLogs = (tenantId) => {\n  let data = fetch(\"/test-ouput?tenant=\" + tenantId).then(function (\n    response\n  ) {\n    return response.json();\n  });\n\n  return data;\n};\n\nconst fetchDashboardUrl = () => {\n  let data = fetch(\"/dashboardUrl\").then(function (response) {\n    if (response.status === 500) {\n      return {\n        DashboardURL: \"\",\n        InfluxdbURL: \"\",\n        ChronografURL: \"\",\n        ReportURL: \"\",\n        MonitorURL: \"\",\n      };\n    } else {\n      return response.json();\n    }\n  });\n\n  return data;\n};\n\nconst fetchSlavesForTenant = async (tenantId) => {\n  let data = get(\"/slaves?tenant=\" + tenantId).then((res) => {\n    return res.data\n  })\n  return data;\n};\n\nexport {\n  fetchPostsApi,\n  fetchReportByTenant,\n  fetchDashboardUrl,\n  fetchSlavesForTenant,\n};\n","import MyContext from \"./MyContext\";\n\nimport React, { Component } from \"react\";\n\nimport { fetchReportByTenant, fetchDashboardUrl, fetchSlavesForTenant } from './provider/report';\nimport _ from 'lodash';\n\nclass MyProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reports: [],\n      slaves: [],\n      graphanaUrl: '',\n      influxdbUrl: '',\n      chronographUrl: '',\n      graphsUrl: '',\n      weaveScopeUrl: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.updateFunctions();\n    this.fetchDashboardURLS();\n  }\n\n  updateFunctions = () => {\n     this.setState({fetchSlaves: this.fetchSlaves});\n     this.setState({fetchReportsForTenant: this.fetchReportsForTenant});\n     this.setState({fetchSlavesForTenant: this.fetchSlavesForTenant});\n  }\n  fetchReportsForTenant = async (id) => {\n    const report = await fetchReportByTenant(id);\n    let reports = _.map(report, (item)=> {\n      return {id: id.concat(\"-\",item.date), date: item.date}\n    });\n    this.setState({ reports: reports });\n  };\n\n  fetchSlaves = async(tenant) => {\n    const slaves = await fetchSlavesForTenant(tenant);\n    this.setState({ slaves: slaves });\n  }\n\n  fetchDashboardURLS = async () => {\n    const dashboard = await fetchDashboardUrl();\n    this.setState({ graphanaUrl: dashboard.DashboardURL });\n    this.setState({ influxdbUrl: dashboard.InfluxdbURL });\n    this.setState({ chronographUrl: dashboard.ChronografURL });\n    this.setState({ graphsUrl: dashboard.ReportURL });\n    this.setState({ weaveScopeUrl: dashboard.MonitorURL });\n  };\n  render() {\n    return (\n      <MyContext.Provider\n        value={{\n          ...this.state,\n        }}\n      >\n        {this.props.children}\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default MyProvider;\n","import React from 'react';\nimport Main from './Main/Main';\nimport MyProvider from './MyProvider';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nfunction App() {\n  return (\n    <MyProvider>\n      <Main/>\n    </MyProvider>\n\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport {reportFetchTenants, fetchSlavesForTenant } from \"./report\";\n\nexport default combineReducers({ reportFetchTenants, fetchSlavesForTenant });\n\n","import { REPORT_FETCH_TENANTS, RECEIVE_REPORT_TENANTS ,FETCH_LOGS_FOR_SLAVE, RECEIVE_LOGS_FOR_SLAVE} from '../actionTypes';\nconst reportFetchTenants = (state = [], action) => {\n    switch (action.type) {\n        case REPORT_FETCH_TENANTS:\n          return state;\n        case RECEIVE_REPORT_TENANTS:\n          return action.tenants;\n        default:\n        return state;\n    }\n  }\n\n  const fetchSlavesForTenant = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_LOGS_FOR_SLAVE:\n          return state;\n        case RECEIVE_LOGS_FOR_SLAVE:\n          return action.slaves;\n        default:\n        return state;\n    }\n  }\n  \n  export {\n    reportFetchTenants,\n    fetchSlavesForTenant\n  }","const reportFetchTenantsSelector = state => state.reportFetchTenants\nconst fetchSlavesForTenantSelector = state => state.fetchSlavesForTenant\n\nexport {\n    reportFetchTenantsSelector,\n    fetchSlavesForTenantSelector\n}","import { put, call, fork, select } from 'redux-saga/effects'\nimport fetch from 'isomorphic-fetch'\nimport * as actions from '../redux/actions'\nimport { reportFetchTenantsSelector } from '../redux/selectors'\n\nexport function fetchPostsApi() {\n  let data = fetch('/tenants').then(function(response) {\n    return response.json();\n  });\n  \n  return data;\n}\n\nexport function* reportFetchTenants() {\n  yield put(actions.reportFetchTenants());\n  const tenants = yield call(fetchPostsApi);\n  yield put(actions.receiveReportTenants(tenants))\n}\n\nexport function* startup() {\n  const selectedTenants = yield select(reportFetchTenantsSelector)\n  yield fork(reportFetchTenants, selectedTenants)\n}\n\nexport default function* root() {\n  yield fork(startup)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from './redux/store';\nimport rootSaga from './sagas';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\n\nconst store = configureStore();\nstore.runSaga(rootSaga);\n\nReactDOM.render(\n//  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>,\n // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from \"./reducers\";\nimport createSagaMiddleware from 'redux-saga'\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware()\n  return {\n    ...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\n    runSaga: sagaMiddleware.run,\n  }\n}\n\n"],"sourceRoot":""}