{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kodjo/workspace/afriex/loadtest-framework/docker/control/test-admin/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(reportFetchTenants),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(startup),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(root);import{put,call,fork,select}from'redux-saga/effects';import fetch from'isomorphic-fetch';import*as actions from'../redux/actions';import{reportFetchTenantsSelector}from'../redux/selectors';export function fetchPostsApi(){var data=fetch('/tenants').then(function(response){return response.json();});return data;}export function reportFetchTenants(){var tenants;return _regeneratorRuntime.wrap(function reportFetchTenants$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(actions.reportFetchTenants());case 2:_context.next=4;return call(fetchPostsApi);case 4:tenants=_context.sent;_context.next=7;return put(actions.receiveReportTenants(tenants));case 7:case\"end\":return _context.stop();}}},_marked);}export function startup(){var selectedTenants;return _regeneratorRuntime.wrap(function startup$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return select(reportFetchTenantsSelector);case 2:selectedTenants=_context2.sent;_context2.next=5;return fork(reportFetchTenants,selectedTenants);case 5:case\"end\":return _context2.stop();}}},_marked2);}export default function root(){return _regeneratorRuntime.wrap(function root$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fork(startup);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/Users/kodjo/workspace/afriex/loadtest-framework/docker/control/test-admin/src/sagas/index.js"],"names":["reportFetchTenants","startup","root","put","call","fork","select","fetch","actions","reportFetchTenantsSelector","fetchPostsApi","data","then","response","json","tenants","receiveReportTenants","selectedTenants"],"mappings":"sMAaiBA,kB,iDAMAC,O,iDAKQC,I,EAxBzB,OAASC,GAAT,CAAcC,IAAd,CAAoBC,IAApB,CAA0BC,MAA1B,KAAwC,oBAAxC,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,kBAAzB,CACA,OAASC,0BAAT,KAA2C,oBAA3C,CAEA,MAAO,SAASC,CAAAA,aAAT,EAAyB,CAC9B,GAAIC,CAAAA,IAAI,CAAGJ,KAAK,CAAC,UAAD,CAAL,CAAkBK,IAAlB,CAAuB,SAASC,QAAT,CAAmB,CACnD,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAFU,CAAX,CAIA,MAAOH,CAAAA,IAAP,CACD,CAED,MAAO,SAAUX,CAAAA,kBAAV,0JACL,MAAMG,CAAAA,GAAG,CAACK,OAAO,CAACR,kBAAR,EAAD,CAAT,CADK,uBAEW,MAAMI,CAAAA,IAAI,CAACM,aAAD,CAAV,CAFX,OAECK,OAFD,+BAGL,MAAMZ,CAAAA,GAAG,CAACK,OAAO,CAACQ,oBAAR,CAA6BD,OAA7B,CAAD,CAAT,CAHK,sDAMP,MAAO,SAAUd,CAAAA,OAAV,2JACmB,MAAMK,CAAAA,MAAM,CAACG,0BAAD,CAAZ,CADnB,OACCQ,eADD,iCAEL,MAAMZ,CAAAA,IAAI,CAACL,kBAAD,CAAqBiB,eAArB,CAAV,CAFK,wDAKP,cAAe,SAAUf,CAAAA,IAAV,oIACb,MAAMG,CAAAA,IAAI,CAACJ,OAAD,CAAV,CADa","sourcesContent":["import { put, call, fork, select } from 'redux-saga/effects'\nimport fetch from 'isomorphic-fetch'\nimport * as actions from '../redux/actions'\nimport { reportFetchTenantsSelector } from '../redux/selectors'\n\nexport function fetchPostsApi() {\n  let data = fetch('/tenants').then(function(response) {\n    return response.json();\n  });\n  \n  return data;\n}\n\nexport function* reportFetchTenants() {\n  yield put(actions.reportFetchTenants());\n  const tenants = yield call(fetchPostsApi);\n  yield put(actions.receiveReportTenants(tenants))\n}\n\nexport function* startup() {\n  const selectedTenants = yield select(reportFetchTenantsSelector)\n  yield fork(reportFetchTenants, selectedTenants)\n}\n\nexport default function* root() {\n  yield fork(startup)\n}\n"]},"metadata":{},"sourceType":"module"}