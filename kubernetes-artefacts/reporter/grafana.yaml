apiVersion: v1
kind: Service
metadata:
  name: jmeter-grafana
  labels:
    app: jmeter-grafana
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: jmeter-grafana
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jmeter-grafana
  labels:
    app: jmeter-grafana
spec:
  replicas: 1
  serviceName: jmeter-grafana
  selector:
    matchLabels:
      app: jmeter-grafana
  template:
    metadata:
      labels:
        app: jmeter-grafana
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: report
                operator: In
                values:
                - grafana
      serviceAccountName: afriex-jmeter
      containers:
        - image: grafana/grafana:6.5.0
          imagePullPolicy: IfNotPresent
          name: grafana
          volumeMounts:
          - name: grafana-jmeter
            mountPath: /var/lib/grafana
          - mountPath: /etc/grafana/grafana.ini
            name: grafana-config
            subPath: grafana.ini
            readOnly: true
          ports:
          - containerPort: 3000
            protocol: TCP
          env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_USERS_ALLOW_ORG_CREATE
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: Admin
          - name: GF_SERVER_ROOT_URL
          # If you're only using the API Server proxy, set this value instead:
          # value: /api/v1/namespaces/kube-system/services/monitoring-grafana/proxy
            value: /
      restartPolicy: Always
      securityContext:
        runAsUser: 472
        fsGroup: 472
      volumes:
       - name: grafana-jmeter
         persistentVolumeClaim:
          claimName: grafana-jmeter
       - name: grafana-config
         configMap:
           name: grafana-config
