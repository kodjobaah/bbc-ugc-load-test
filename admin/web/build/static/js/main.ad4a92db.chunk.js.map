{"version":3,"sources":["Main/Jmeter/Create/SlaveConfig/SlaveConfig.js","Main/Jmeter/Create/Create.js","redux/actions.js","redux/actionTypes.js","MyContext.js","MyConsumer.js","Main/Jmeter/Report/GenerateGraph/ReportList/ReportList.js","Main/Jmeter/Report/GenerateGraph/GenerateGraph.js","Main/Jmeter/Report/SlaveLogFiles/SlaveLogs.js","Main/Jmeter/Report/Report.js","Main/Jmeter/Monitor/StopTest/Safely/Safely.js","Main/Jmeter/Monitor/StopTest/StopTest.js","Main/Jmeter/Monitor/TestStatus/TestStatus.js","Main/Jmeter/Monitor/NodeInformation/NodeInformation.js","Main/Jmeter/Monitor/TenantDeletion/TenantDeletion.js","Main/Jmeter/Monitor/Monitor.js","Main/Jmeter/Jmeter.js","Main/Weavescope/WeaveScope.js","Main/Report/Report.js","Main/Grafana/Graphana.js","Main/Chronograf/Chronograf.js","Main/Influxdb/Influxdb.js","Main/Main.js","provider/report.js","MyProvider.js","App.js","redux/reducers/report.js","redux/reducers/index.js","redux/selectors.js","sagas/index.js","serviceWorker.js","index.js","redux/store.js"],"names":["memoryOptions","key","value","text","metaSpace","cpus","ram","SlaveConfig","state","handleChange","e","item","alert","JSON","stringify","props","create","check","name","Container","className","Grid","divided","Row","columns","Column","Header","as","Segment","Dropdown","onChange","this","placeholder","options","Component","bandwidthOptions","CreateTest","open","teststart","bandwidthError","cpuError","jmeterscriptError","maxmetaError","ramError","slavesError","tenantError","testdataError","xmsError","xmxError","bandwidth","cpu","jmeterscript","maxmeta","slaves","tenant","testdata","xms","xmx","formError","setState","target","files","handleSubmit","preventDefault","console","log","error","fileUpload","then","response","data","closeModal","configureModal","closeOnEscape","closeOnDimmerClick","file","formData","FormData","append","set","post","headers","textAlign","Form","onSubmit","Message","header","content","Field","required","Button","color","onClick","Modal","style","height","Content","Actions","positive","labelPosition","icon","Select","type","info","receiveReportTenants","tenants","receivedAt","Date","setMilliseconds","MyContext","React","createContext","MyConsumer","Consumer","dataField","ReportList","items","updateState","row","isSelect","rowIndex","id","date","generateReport","length","selectRowProp","mode","hideSelectAll","clickToSelect","onSelect","reports","keyField","selectRow","pagination","paginationFactory","Divider","GenerateGraph","reportFetchTenants","fetchReportsForTenant","tenantList","event","connect","ownProps","TenantList","tl","con","_","map","dispatch","SlaveLogs","fetchTestStatus","get","tennants","AllTenants","Namespace","Name","fetchSlaves","panes","menuItem","render","Tab","Pane","JmeterTestReports","menu","attached","tabular","Safely","stopTest","fetchTenants","StopTest","TestStatus","teststatus","deleted","BeingDeleted","started","Started","concat","NodeInformation","nodes","fetchNodes","fetch","status","InstanceID","Phase","NodeConditions","json","TenantDeletion","deleteTenant","Monitor","celled","overflow","Jmeter","width","WeaveScope","weaveScopeUrl","Report","graphsUrl","Graphana","graphanaUrl","Chronograf","chronographUrl","src","Influxdb","influxdbUrl","Main","warning","textalign","fetchReportByTenant","tenantId","MyProvider","updateFunctions","a","report","fetchDashboardURLS","DashboardURL","InfluxdbURL","dashboard","ChronografURL","ReportURL","MonitorURL","Provider","children","App","action","combineReducers","reportFetchTenantsSelector","startup","root","fetchPostsApi","put","call","actions","select","selectedTenants","fork","Boolean","window","location","hostname","match","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","runSaga","run","configureStore","rootSaga","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ad4a92db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Dropdown, Grid, Header, Segment} from \"semantic-ui-react\";\nimport \"./SlaveConfig.css\";\n\n\nconst memoryOptions = [\n    { key: \"1\", value: \"1\", text: \"1 Gigabyte\"},\n    { key: \"2\", value: \"2\", text: \"2 Gigabyte\"},\n    { key: \"3\", value: \"3\", text: \"3 Gigabyte\"},\n    { key: \"4\", value: \"4\", text: \"4 Gigabyte\"},\n    { key: \"5\", value: \"5\", text: \"5 Gigabyte\"},\n    { key: \"6\", value: \"6\", text: \"6 Gigabyte\"}\n];\n\nconst metaSpace = [\n    {key: \"256\", value: \"256\", text: \"256mb\"},\n    {key: \"512\", value: \"512\", text: \"512mb\"},\n    {key: \"768\", value: \"768\", text: \"768mb\"},\n    {key: \"1024\", value: \"1024\", text: \"1024mb\"},\n    {key: \"1280\", value: \"1280\", text: \"1280mb\"},\n    {key: \"1536\", value: \"1536\", text: \"1536mb\"},\n];\n\nconst cpus = [\n    { key: \"1\", value: \"1\", text: \"1 CPU\"},\n    { key: \"2\", value: \"2\", text: \"2 CPU\"},\n    { key: \"3\", value: \"3\", text: \"3 CPU\"},\n    { key: \"4\", value: \"4\", text: \"4 CPU\"}\n];\n\nconst ram = [\n    { key: \"1\", value: \"1\", text: \"1 Gigabyte\"},\n    { key: \"2\", value: \"2\", text: \"2 Gigabyte\"},\n    { key: \"3\", value: \"3\", text: \"3 Gigabyte\"},\n    { key: \"4\", value: \"4\", text: \"4 Gigabyte\"},\n    { key: \"5\", value: \"5\", text: \"5 Gigabyte\"},\n    { key: \"6\", value: \"6\", text: \"6 Gigabyte\"},\n    { key: \"7\", value: \"7\", text: \"7 Gigabyte\"},\n    { key: \"8\", value: \"8\", text: \"8 Gigabyte\"},\n    { key: \"9\", value: \"9\", text: \"9 Gigabyte\"},\n    { key: \"10\", value: \"10\", text: \"10 Gigabyte\"},\n    { key: \"11\", value: \"11\", text: \"11 Gigabyte\"},\n    { key: \"12\", value: \"12\", text: \"12 Gigabyte\"},\n    { key: \"13\", value: \"13\", text: \"13 Gigabyte\"},\n    { key: \"14\", value: \"14\", text: \"14 Gigabyte\"}\n\n]\n\nclass SlaveConfig extends Component {\n    state = {};\n\n    handleChange = (e, item) => {\n        alert(JSON.stringify(item.value));\n\n        this.props.create.check(item.name, item.value);\n    }\n    render() {\n      return (\n        <Container className=\"Jmeter-Wrapper\">\n        <Grid divided=\"vertically\">\n          <Grid.Row columns={2}>\n            <Grid.Column>\n            <Header as=\"h1\">JVM Settings</Header>\n            <Segment>\n                <label>Initial Memory allocation (Xms):</label>\n            <Dropdown  name=\"xms\" onChange={this.props.create.handleChange} placeholder=\"Select Memory allocation (Xms)\" options={memoryOptions} />\n            </Segment>\n           <Segment>\n           <label>Maximum Memory allocation (Xmx):</label>\n            <Dropdown name=\"xmx\" onChange={this.props.create.handleChange} placeholder=\"Select Maximum Memory allocation (Xmx)\" options={memoryOptions} />\n            </Segment>\n           <Segment> \n           <label>Control Garbage Collection  (MaxMetaspaceSize):</label>\n            <Dropdown name=\"maxmeta\" onChange={this.props.create.handleChange} placeholder=\"Select (MaxMetaspaceSize)\" options={metaSpace} />\n            </Segment>\n            </Grid.Column>\n            <Grid.Column>\n            <Header as=\"h1\">Node Settings</Header>\n            <Segment>\n            <label>Allocate cpu:</label>\n            <Dropdown name=\"cpu\" onChange={this.props.create.handleChange} placeholder=\"Select Cpu\" options={cpus} />\n            </Segment>\n            <Segment>\n            <label>Allocate Bandwidth:</label>\n            <Dropdown name=\"ram\" onChange={this.props.create.handleChange} placeholder=\"Select Bandwidth\" options={ram} />\n            </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n   \n        );\n    }\n  }\n  \n  export default SlaveConfig;","import React, { Component } from \"react\";\nimport { post } from \"axios\";\n\nimport {\n  Button,\n  Container,\n  Header,\n  Form,\n  Message,\n  Modal,\n} from \"semantic-ui-react\";\nimport SlaveConfig from \"./SlaveConfig/SlaveConfig\";\nimport \"./Create.css\";\nconst bandwidthOptions = [\n  { key: \"adsl\", value: \"adsl\", text: \"ADSL : 8 Mbit/s\" },\n  { key: \"adsl2\", value: \"adsl2\", text: \"ADSL2 : 12 Mbit/s\" },\n  { key: \"adsl2Plus\", value: \"adsl2Plus\", text: \"ADSL2+ : 24 Mbit/s\" },\n  {\n    key: \"ethernetLan\",\n    value: \"ethernetLan\",\n    text: \"Ethernet LAN ; 10 Mbit/s\",\n  },\n  {\n    key: \"fastEthernet\",\n    value: \"fastEthernet\",\n    text: \"Fast Ethernet : 100 Mbit/s\",\n  },\n  {\n    key: \"gigabitEthernet\",\n    value: \"gigabitEthernet\",\n    text: \"Gigabit Ethernet : 1 Gbit/s\",\n  },\n  {\n    key: \"10gigabitEthernet\",\n    value: \"10gigabitEthernet\",\n    text: \"10 Gigabit Ethernet : 10 Gbit/s\",\n  },\n  {\n    key: \"100gigabitEthernet\",\n    value: \"100gigabitEthernet\",\n    text: \"100 Gigabit Ethernet : 100 Gbit/s\",\n  },\n  {\n    key: \"mobileDataEdge\",\n    value: \"mobileDataEdge\",\n    text: \"Mobile data EDGE : 384 kbit/s\",\n  },\n  {\n    key: \"mobileDatacHspaPlus\",\n    value: \"mobileDatacHspaPlus\",\n    text: \"Mobile data HSPA+ : 21 Mbp/s\",\n  },\n  {\n    key: \"mobileDataHspa\",\n    value: \"mobileDataHspa\",\n    text: \"Mobile data HSPA : 14,4 Mbp/s\",\n  },\n  {\n    key: \"mobileDataDcHspaPlus\",\n    value: \"mobileDataDcHspaPlus\",\n    text: \"Mobile data DC-HSPA+ : 42 Mbps\",\n  },\n  {\n    key: \"mobileDataLte\",\n    value: \"mobileDataLte\",\n    text: \"Mobile data LTE : 150 Mbp/s\",\n  },\n  {\n    key: \"mobileDataGprs\",\n    value: \"mobileDataGprs\",\n    text: \"Mobile data GPRS : 171 kbit/s\",\n  },\n  {\n    key: \"wifi80211a\",\n    value: \"wifi80211a\",\n    text: \"WIFI 802.11a/g : 54 Mbit/s\",\n  },\n  { key: \"wifi80211n\", value: \"wifi80211n\", text: \"WIFI 802.11n : 600 Mbit/s\" },\n];\n\nclass CreateTest extends Component {\n  state = {\n    open: false,\n    teststart: false,\n    bandwidthError: false,\n    cpuError: false,\n    jmeterscriptError: false,\n    maxmetaError: false,\n    ramError: false,\n    slavesError: false,\n    tenantError: false,\n    testdataError: false,\n    xmsError: false,\n    xmxError: false,\n    bandwidth: \"\",\n    cpu: \"\",\n    jmeterscript: \"\",\n    maxmeta: \"\",\n    ram: \"\",\n    slaves: \"\",\n    tenant: \"\",\n    testdata: \"\",\n    xms: \"\",\n    xmx: \"\",\n    formError: false,\n  };\n\n  handleChange = (e, item) => {\n    if (item) {\n      this.setState({ [item.name]: item.value });\n    } else {\n      if (e.target.name === \"jmeterscript\" || e.target.name === \"testdata\") {\n        this.setState({ [e.target.name]: e.target.files[0] });\n      } else {\n        this.setState({ [e.target.name]: e.target.value });\n      }\n    }\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"state submit =\", this.state);\n    let error = false;\n    if (this.state.bandwidth === \"\") {\n      this.setState({ bandwidthError: true });\n      error = true;\n    } else {\n      this.setState({ bandwidthError: false });\n    }\n\n    if (this.state.cpu === \"\") {\n      this.setState({ cpuError: true });\n      error = true;\n    } else {\n      this.setState({ cpuError: false });\n    }\n\n    if (this.state.jmeterscript === \"\") {\n      this.setState({ jmeterscriptError: true });\n      error = true;\n    } else {\n      this.setState({ jmeterscriptError: false });\n    }\n\n    if (this.state.maxmeta === \"\") {\n      this.setState({ maxmetaError: true });\n      error = true;\n    } else {\n      this.setState({ maxmetaError: false });\n    }\n\n    if (this.state.ram === \"\") {\n      this.setState({ ramError: true });\n      error = true;\n    } else {\n      this.setState({ ramError: false });\n    }\n\n    if (this.state.tenant === \"\") {\n      this.setState({ tenantError: true });\n      error = true;\n    } else {\n      this.setState({ tenantError: false });\n    }\n    if (this.state.testdata === \"\") {\n      this.setState({ testdataError: true });\n      error = true;\n    } else {\n      this.setState({ testdataError: false });\n    }\n    if (this.state.xms === \"\") {\n      this.setState({ xmsError: true });\n      error = true;\n    } else {\n      this.setState({ xmsError: false });\n    }\n    if (this.state.xmx === \"\") {\n      this.setState({ xmxError: true });\n      error = true;\n    } else {\n      this.setState({ xmxError: false });\n    }\n    if (this.state.slaves === \"\") {\n      this.setState({ slavesError: true });\n      error = true;\n    } else {\n      this.setState({ slavesError: false });\n    }\n\n    if (error === true) {\n      this.setState({ formError: true });\n    } else {\n      this.setState({ formError: false });\n      console.log(\"upload\");\n      this.fileUpload().then((response) => {\n        console.log(response.data);\n        this.setState({ teststart: true });\n      });\n    }\n  };\n\n  fileUpload(file) {\n    const url = \"/start-test\";\n    const formData = new FormData();\n    formData.append(\"context\", this.state.tenant);\n    formData.append(\"numberOfNodes\", this.state.slaves);\n    formData.append(\"jmeter\", this.state.jmeterscript);\n    formData.append(\"data\", this.state.testdata);\n    formData.set(\"xmx\", this.state.xmx);\n    formData.set(\"xms\", this.state.xms);\n    formData.set(\"cpu\", this.state.cpu);\n    formData.set(\"ram\", this.state.ram);\n    formData.set(\"maxMetaspaceSize\", this.state.maxmeta);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    return post(url, formData, config);\n  }\n\n  closeModal = () => {\n    this.setState({ open: false });\n    this.setState({ formError: false });\n  };\n\n  configureModal = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { open } = this.state;\n    return (\n      <Container className=\"CreateTest-Wrapper\">\n        <Container textAlign=\"center\">\n          <Header as=\"h1\">Create Test</Header>\n        </Container>\n\n        <Form error={this.state.formError} onSubmit={this.handleSubmit}>\n          {this.state.formError ? (\n            <Message\n              error\n              header=\"Test Creation Error\"\n              content=\"Please make sure you have supplied all data\"\n            />\n          ) : null}\n          <Form.Field required>\n            <label>Tennant</label>\n            <input\n              name=\"tenant\"\n              onChange={this.handleChange}\n              placeholder=\"Tennat\"\n            />\n            <small>This is the tenant in which you want to run the tests</small>\n          </Form.Field>\n          <Form.Field required>\n            <label>Number of jmeter Slaves</label>\n            <input\n              name=\"slaves\"\n              onChange={this.handleChange}\n              placeholder=\"Slaves\"\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Settings for Jmeter slaves</label>\n            <Button color=\"blue\" onClick={this.configureModal(true, false)}>\n              Configure Slaves\n            </Button>\n            <Modal style={{ height: \"fit-content\" }} open={open}>\n              <Modal.Header>SlaveConfiguration</Modal.Header>\n              <Modal.Content>\n                <SlaveConfig create={this} />\n              </Modal.Content>\n              <Modal.Actions>\n                <Button\n                  positive\n                  onClick={this.closeModal}\n                  labelPosition=\"right\"\n                  icon=\"checkmark\"\n                  content=\"Done\"\n                />\n              </Modal.Actions>\n            </Modal>\n          </Form.Field>\n          <Form.Field required>\n          <label>Select Bandwidth</label>\n          \n          <Form.Select\n            name=\"bandwidth\"\n            placeholder=\"select bandwidth\"\n            onChange={this.handleChange}\n            options={bandwidthOptions}\n          />\n          </Form.Field>\n          <Form.Field required>\n            <label>Jmeter Test Script</label>\n            <input\n              name=\"jmeterscript\"\n              onChange={this.handleChange}\n              type=\"file\"\n            />\n            <small>This is the Jmeter script to upload</small>\n          </Form.Field>\n          <Form.Field>\n            <label>Test Data</label>\n            <input name=\"testdata\" onChange={this.handleChange} type=\"file\" />\n            <small>This is the data file used by the test</small>\n          </Form.Field>\n          <Button color=\"blue\" type=\"submit\">\n            Run Tests\n          </Button>\n        </Form>\n        {this.state.teststart ? (\n          <Message info header={this.state.tenant} content=\"Started Test\" />\n        ) : null}\n      </Container>\n    );\n  }\n}\n\nexport default CreateTest;\n","import { REPORT_FETCH_TENANTS, RECEIVE_REPORT_TENANTS } from './actionTypes';\n\nexport function reportFetchTenants() {\n    return {\n        type: REPORT_FETCH_TENANTS\n    };\n}\n\nexport function receiveReportTenants(tenants) {\n    return {\n      type: RECEIVE_REPORT_TENANTS,\n      tenants,\n      receivedAt: new Date().setMilliseconds(0),\n    }\n  }","export const REPORT_FETCH_TENANTS = 'REPORT_FETCH_TENANTS';\nexport const RECEIVE_REPORT_TENANTS = 'RECEIVE_REPORT_TENANTS';\n","import React from 'react';\n\nconst MyContext = React.createContext({});\n\nexport default MyContext;","import MyContext from \"./MyContext\";\n\nconst MyConsumer = MyContext.Consumer;\n\nexport default MyConsumer;\n","import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport MyConsumer from \"../../../../../MyConsumer\";\nimport { post } from \"axios\";\nimport { Button, Divider } from \"semantic-ui-react\";\nimport \"./ReportList.css\";\nconst columns = [\n  {\n    dataField: \"id\",\n    text: \"id\",\n  },\n  {\n    dataField: \"date\",\n    text: \"date\",\n  },\n];\n\nexport class ReportList extends Component {\n  state = {\n    items: {},\n  };\n\n  updateState = (row, isSelect, rowIndex, e) => {\n    this.setState((state) => {\n      let items = this.state.items;\n      console.log(\"items=\", JSON.stringify(items));\n      console.log(\"select=\", isSelect);\n      if (isSelect) {\n        items[row.id] = row.date;\n      } else {\n        delete items[row.id];\n      }\n      console.log(\"items-after=\" + JSON.stringify(items));\n      return {\n        items: items,\n      };\n    });\n\n    return true;\n  };\n\n  generateReport = () => {\n    console.log(\"generating report\");\n\n    if (this.state.items.length > 0) {\n\n      const formData = new FormData();\n      formData.set(\"data\", this.state.items);\n      formData.set(\"tenant\", this.props.tenant);\n      \n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n      post(\"/genReport\", formData, config).then((response) => {\n        console.log(response);\n      });\n\n    }\n  };\n  selectRowProp = {\n    mode: \"checkbox\", // single row selection\n    hideSelectAll: true,\n    clickToSelect: true,\n    onSelect: this.updateState,\n  };\n  componentDidMount() {}\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ reports }) => (\n          <div>\n            <BootstrapTable\n              //  classes=\"reportlist\"\n              keyField=\"id\"\n              data={reports}\n              selectRow={this.selectRowProp}\n              columns={columns}\n              pagination={paginationFactory()}\n            />\n            <Divider />\n            <Button color=\"blue\" onClick={this.generateReport}>\n              Generate Report\n            </Button>\n          </div>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default ReportList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dropdown, Divider, Segment } from \"semantic-ui-react\";\nimport { reportFetchTenants } from \"../../../../redux/actions\";\nimport ReportList from \"./ReportList/ReportList\";\nimport \"./GenerateGraph.css\";\nimport _ from \"lodash\";\nimport MyConsumer from \"../../../../MyConsumer\";\n\nclass GenerateGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.reportFetchTenants();\n  }\n\n  // onChange = (event, data)=> {\n  //   console.log(\"event =======>\",event);\n  //   console.log(data);\n  // }\n  render() {\n    return (\n      <MyConsumer>\n        {({ fetchReportsForTenant }) => (\n          <div>\n            <Segment divided>\n              <Dropdown\n                placeholder=\"Select tenant\"\n                options={this.props.tenantList}\n                onChange={(event, data) => {\n                  this.setState({ tenant: data.value });\n                  fetchReportsForTenant(data.value);\n                }}\n              />\n              <Divider />\n              <ReportList tenant={this.state.tenant} />\n            </Segment>\n          </div>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\n/*\nGenerateGraph.propTypes = {\n  reportTenants: PropTypes.object.isRequired,\n};\n*/\n\nfunction mapStateToProps(state, ownProps) {\n  console.log(\"state=\", state.reportFetchTenants.TenantList);\n  const { reportFetchTenants } = state;\n  let tl = reportFetchTenants.TenantList;\n\n  let con = _.map(tl, function (item) {\n    return { key: item, value: item, text: item };\n  });\n\n  console.log(\"converted=\", con);\n  // component receives additionally:\n  return { tenantList: con };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  reportFetchTenants: () => dispatch(reportFetchTenants()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenerateGraph);\n","import React, { Component } from \"react\";\nimport { Dropdown, Segment } from \"semantic-ui-react\";\nimport { get } from \"axios\";\nimport \"./SlaveLogs.css\";\nimport _ from \"lodash\";\nimport MyConsumer from \"../../../../MyConsumer\";\n//import SlaveList from \"./SlaveList/SlaveList\";\n\nclass SlaveLogs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { tennants: [] };\n  }\n\n  componentDidMount() {\n    this.fetchTestStatus();\n  }\n\n  fetchTestStatus = () => {\n    get(\"/tenants\").then((response) => {\n      let tennants = response.data.AllTenants;\n      console.log(tennants);\n\n      let AllTenants = _.map(tennants, function (item) {\n        return {\n          key: item.Namespace,\n          value: item.Namespace,\n          text: item.Name + \"@\" + item.Namespace,\n        };\n      });\n      this.setState({ tennants: AllTenants });\n      //  this.setState({teststatus: status});\n    });\n  };\n\n  // onChange = (event, data)=> {\n  //   console.log(\"event =======>\",event);\n  //   console.log(data);\n  // }\n  render() {\n    return (\n      <MyConsumer>\n        {({ fetchSlaves }) => (\n          <div>\n              <Segment>\n                <Dropdown\n                  placeholder=\"Select tennet\"\n                  options={this.state.tennants}\n                  onChange={(event, data) => {\n                    fetchSlaves(data.value);\n                  }}\n                  //onChange = {this.onChange}\n                />\n              </Segment>\n            \n\n          </div>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default SlaveLogs;\n","import React, {Component} from 'react';\nimport {\n  Container, \n  Header, \n  Tab \n} from 'semantic-ui-react';\nimport GenerateGraph from './GenerateGraph/GenerateGraph';\nimport SlaveLogs from './SlaveLogFiles/SlaveLogs';\nimport './Report.css';\n\n\nconst panes = [\n  { menuItem: 'Generate Graphs', render: () => <Tab.Pane><GenerateGraph/></Tab.Pane> },\n  { menuItem: 'JMeter Log Files', render: () => <Tab.Pane><SlaveLogs/></Tab.Pane> }\n]\n\nclass JmeterTestReports extends Component {\n  state = {}\n    render() {\n      return (\n        <Container className=\"Main-Wrapper\">\n          <Container textAlign='center'><Header as=\"h1\">Jmeter Test Reports</Header></Container>\n          <Tab  menu={{ color: 'blue', attached: true, tabular: true }} panes={panes} />\n        </Container>\n      );\n    }\n  }\n\nexport default JmeterTestReports;","import React, { Component } from \"react\";\nimport { post, get } from \"axios\";\nimport {\n  Container,\n  Button,\n  Dropdown,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"./Safely.css\";\nimport _ from \"lodash\";\n\nclass Safely extends Component {\n  state = { tennants: [] };\n\n  componentDidMount() {\n    this.fetchTenants();\n  }\n\n  stopTest = () => {\n    if (this.state.value) {\n      const url = \"/stop-test\";\n      const formData = new FormData();\n      formData.set(\"StopContext\", this.state.value);\n\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n      post(url, formData, config).then((response) => {\n        console.log(response);\n      });\n    }\n  };\n\n  handleChange = (e, { value }) => this.setState({ value });\n  fetchTenants = () => {\n    get(\"/tenants\").then((response) => {\n      let tennants = response.data.AllTenants;\n      console.log(tennants);\n\n      let AllTenants = _.map(tennants, function (item) {\n        return { key: item.Namespace, value: item.Namespace, text: item.Namespace };\n      });\n      this.setState({ tennants: AllTenants });\n    });\n  };\n  render() {\n    return (\n      <Container className=\"Main-Wrapper\">\n        <Segment>\n          <Dropdown\n            onChange={this.handleChange}\n            placeholder=\"Select Tenant to Stop\"\n            options={this.state.tennants}\n          />\n        </Segment>\n        <Segment>\n          <Button color=\"blue\" onClick={this.stopTest}> Stop Test Safely</Button>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default Safely;\n","import React, {Component} from 'react';\nimport {\n  Container, \n  Header, \n  Tab \n} from 'semantic-ui-react';\nimport Safely from './Safely/Safely';\n//import ForceStop from './ForceStop/ForceStop';\nimport './StopTest.css';\n\n\nconst panes = [\n  { menuItem: 'Safely', render: () => <Tab.Pane><Safely/></Tab.Pane> },\n  //{ menuItem: 'Force', render: () => <Tab.Pane><ForceStop/></Tab.Pane> }\n]\n\nclass StopTest extends Component {\n  state = {}\n    render() {\n      return (\n        <Container className=\"Main-Wrapper\">\n          <Container textAlign='center'><Header as=\"h1\">Stop Tests</Header></Container>\n          <Tab  menu={{ color: 'blue', attached: true, tabular: true }} panes={panes} />\n        </Container>\n      );\n    }\n  }\n\nexport default StopTest;","import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { get } from \"axios\";\nimport { Container, Button, Header } from \"semantic-ui-react\";\nimport \"./TestStatus.css\";\n\nconst columns = [\n  {\n    dataField: \"Tenant\",\n    text: \"Tenant\",\n  },\n  {\n    dataField: \"Started\",\n    text: \"Started\",\n  },\n  {\n    dataField: \"Errors\",\n    text: \"Errors\",\n  },\n];\n\nclass TestStatus extends Component {\n  state = { teststatus: [] };\n\n  fetchTestStatus = () => {\n    get(\"/test-status\").then((response) => {\n      let deleted = response.data.BeingDeleted;\n      let started = response.data.Started;\n      if (started && deleted) {\n        this.setState({ teststatus: started.concat(deleted) });\n      } else if (started) {\n        this.setState({ teststatus: started });\n      } else if (deleted) {\n        this.setState({ teststatus: deleted });\n      } else {\n        this.setState({ teststatus: [] });\n      }\n    });\n  };\n  render() {\n    return (\n      <Container className=\"Main-Wrapper\">\n        <Container textAlign=\"center\">\n          <Header as=\"h1\">Test Status</Header>\n        </Container>\n        <BootstrapTable\n          //  classes=\"reportlist\"\n          keyField=\"Tenant\"\n          data={this.state.teststatus}\n          columns={columns}\n        />\n        <Button color=\"blue\" onClick={this.fetchTestStatus}> Fetch Test Status</Button>\n      </Container>\n    );\n  }\n}\n\nexport default TestStatus;\n","import React, {Component} from 'react';\nimport fetch from 'isomorphic-fetch'\nimport _ from \"lodash\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Button, Divider } from \"semantic-ui-react\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n\nimport './NodeInformation.css';\nconst columns = [\n  {\n    dataField: \"Name\",\n    text: \"Node\",\n  },\n  {\n    dataField: \"InstanceID\",\n    text: \"Instance ID\",\n  },\n  {\n    dataField: \"Phase\",\n    text: \"Phase\",\n  },\n  {\n    dataField: \"NodeConditions\",\n    text: \"NodeConditions\",\n  },\n];\n\nexport class NodeInformation extends Component {\n  state = {\n    nodes: [],\n  };\n\n  fetchNodes = () => {\n      fetch(\"/failing-nodes\")\n        .then((response) => {\n            console.log(\"failg -nodes\", response)\n            if (response.status == 500) {\n                return [{Name:\"Something went wrong\", InstanceID: \"Error\", Phase: \"Error\", NodeConditions: \"Error\"}]\n            } else {\n                return response.json();\n            }\n        })\n        .then((json) => {\n            this.setState({nodes: json});\n        });\n    \n  };\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div>\n            <BootstrapTable\n              keyField=\"InstanceID\"\n              data={this.state.nodes}\n              columns={columns}\n              pagination={paginationFactory()}\n            />\n            <Divider/>\n            <Button color=\"blue\" onClick={this.fetchNodes}>Fetch Node Details</Button>\n          </div>\n    );\n  }\n}\n\nexport default NodeInformation;\n","import React, { Component } from \"react\";\nimport { post, get } from \"axios\";\nimport {\n  Container,\n  Button,\n  Dropdown,\n  Header,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"./TenantDeletion.css\";\nimport _ from \"lodash\";\n\nclass TenantDeletion extends Component {\n  state = { tennants: [] };\n\n  componentDidMount() {\n    this.fetchTestStatus();\n  }\n\n  componentDidUpdate() {\n    //this.fetchTestStatus();\n  }\n\n  deleteTenant = () => {\n    if (this.state.value) {\n      const url = \"/delete-tenant\";\n      const formData = new FormData();\n      formData.set(\"TenantContext\", this.state.value);\n\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n      post(url, formData, config).then((response) => {\n        console.log(response);\n      });\n    }\n  };\n\n  handleChange = (e, { value }) => this.setState({ value });\n  fetchTestStatus = () => {\n    get(\"/tenants\").then((response) => {\n      let tennants = response.data.AllTenants;\n      console.log(tennants);\n\n      let AllTenants = _.map(tennants, function (item) {\n        return { key: item.Namespace, value: item.Namespace, text: item.Namespace };\n      });\n      this.setState({ tennants: AllTenants });\n      //  this.setState({teststatus: status});\n    });\n  };\n  render() {\n    return (\n      <Container className=\"Main-Wrapper\">\n        <Container textAlign=\"center\">\n          <Header as=\"h1\">Tenant Deletion</Header>\n        </Container>\n        <Segment>\n          <Dropdown\n            onChange={this.handleChange}\n            placeholder=\"Select Tenant to Delete\"\n            options={this.state.tennants}\n          />\n        </Segment>\n        <Segment>\n          <Button color=\"blue\" onClick={this.deleteTenant}> Delete Selected Tenant</Button>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default TenantDeletion;\n","import React, { Component } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport StopTest from \"./StopTest/StopTest\";\nimport TestStatus from \"./TestStatus/TestStatus\";\nimport NodeInformation from \"./NodeInformation/NodeInformation\";\nimport TenantDeleton from \"./TenantDeletion/TenantDeletion\";\nimport \"./Monitor.css\";\n\nclass Monitor extends Component {\n  state = {};\n  render() {\n    return (\n      <Grid celled=\"internally\" columns={1}>\n        <Grid.Row>\n          <Grid.Column>\n            <TenantDeleton />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <StopTest />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <TestStatus />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column style={{ overflow: \"auto\" }}>\n            <NodeInformation />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default Monitor;\n","import React, { Component } from \"react\";\nimport { Container, Grid } from \"semantic-ui-react\";\nimport CreateTest from './Create/Create';\nimport JmeterTestReports from './Report/Report';\nimport Monitor from './Monitor/Monitor';\nimport \"./Jmeter.css\";\n\nclass Jmeter extends Component {\n  state = {};\n  render() {\n    return (\n      <Container style={{width: 'fit-content'}} className=\"Jmeter-Wrapper\">\n        <Grid divided>\n          <Grid.Row columns={3}>\n            <Grid.Column>\n            <JmeterTestReports/>\n            </Grid.Column>\n            <Grid.Column>\n             <CreateTest/>\n            </Grid.Column>\n            <Grid.Column>\n             <Monitor/>\n            </Grid.Column>\n          </Grid.Row>\n\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default Jmeter;\n","import React, { Component } from \"react\";\n\nimport MyConsumer from \"../../MyConsumer\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./WeaveScope.css\";\n\nexport class WeaveScope extends Component {\n  state = {\n    items: {},\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ weaveScopeUrl }) => (\n          <Segment className=\"Weavescope\">\n            <object data={weaveScopeUrl} width=\"100%\" height=\"100%\">\n                Kubernetes Monitor\n            </object>\n          </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default WeaveScope;\n","import React, { Component } from \"react\";\n\nimport MyConsumer from \"../../MyConsumer\";\nimport \"./Report.css\";\nimport { Segment } from \"semantic-ui-react\";\n\nexport class Report extends Component {\n  state = {\n    items: {},\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ graphsUrl }) => (\n          <Segment className=\"Report\">\n            <object data={graphsUrl} width=\"100%\" height=\"100%\">\n              Generated Reports\n            </object>\n          </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default Report;\n","import React, { Component } from \"react\";\nimport MyConsumer from \"../../MyConsumer\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./Graphana.css\";\n\nexport class Graphana extends Component {\n  state = {\n    items: {},\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ graphanaUrl }) => (\n          <Segment className=\"Graphana\">\n            <iframe data={graphanaUrl} width=\"100%\" height=\"100%\">\n              Grafana Dashboard\n            </iframe>\n          </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default Graphana;\n","import React, { Component } from \"react\";\n\nimport MyConsumer from \"../../MyConsumer\";\nimport {\n  Segment \n} from 'semantic-ui-react';\nimport \"./Chronograf.css\";\n\nexport class Chronograf extends Component {\n  state = {\n    items: {}\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ chronographUrl }) => (\n          <Segment className=\"Chronograf\">\n    <iframe src={ chronographUrl} width=\"100%\" height=\"100%\" >\n    </iframe>\n    </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default Chronograf;\n","import React, { Component } from \"react\";\nimport MyConsumer from \"../../MyConsumer\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./Influxdb.css\";\n\nexport class Influxdb extends Component {\n  state = {\n    items: {},\n  };\n\n  render() {\n    return (\n      <MyConsumer>\n        {({ influxdbUrl }) => (\n          <Segment className=\"Influxdb\">\n            <iframe src={influxdbUrl} width=\"100%\" height=\"100%\">\n              Influxdb Dashboard\n            </iframe>\n          </Segment>\n        )}\n      </MyConsumer>\n    );\n  }\n}\n\nexport default Influxdb;\n","import React, {Component} from 'react';\nimport {\n  Container, \n  Header, \n  Message, \n  Tab \n} from 'semantic-ui-react';\nimport Jmeter from './Jmeter/Jmeter';\nimport WeaveScope from './Weavescope/WeaveScope';\nimport Report from './Report/Report';\nimport Graphana from './Grafana/Graphana';\nimport ChronografContainer from './Chronograf/Chronograf';\nimport InfluxdbContainer from './Influxdb/Influxdb';\nimport './Main.css';\n\n\nconst panes = [\n  { menuItem: 'Jmeter', render: () => <Tab.Pane><Jmeter/></Tab.Pane> },\n  { menuItem: 'Chronograf', render: () => <Tab.Pane><ChronografContainer/></Tab.Pane> },\n  { menuItem: 'Influxdb', render: () => <Tab.Pane><InfluxdbContainer/></Tab.Pane> },\n  { menuItem: 'Grafana', render: () => <Tab.Pane><Graphana/></Tab.Pane> },\n  { menuItem: 'Weavscope', render: () => <Tab.Pane><WeaveScope/></Tab.Pane> },\n  { menuItem: 'Report', render: () => <Tab.Pane><Report/></Tab.Pane> },\n]\n\nclass Main extends Component {\n  state = {}\n    render() {\n      return (\n        <Container style={{ width: 'auto'}}className=\"Main-Wrapper\">\n          <Container textAlign='center'><Header as=\"h1\">Kubernetes Load Test Rig</Header></Container>\n          <Container className=\"Message-wrapper\" textAlign='center'>\n          <Message warning>\n            <Message.Header textalign=\"center\"> Embedding grafana triggers firefox security!</Message.Header>\n            <p>\n              https://stackoverflow.com/questions/11768221/firefox-websocket-security-issue/12042843#12042843\n                It works fine in chrome.\n            </p>\n          </Message>\n          </Container>\n    \n          <Tab  menu={{ color: 'blue', attached: true, tabular: true }} panes={panes} />\n        </Container>\n      );\n    }\n  }\n\nexport default Main;","import fetch from \"isomorphic-fetch\";\n\nconst fetchPostsApi = () => {\n  let data = fetch(\"/tenants\").then(function (response) {\n    return response.json();\n  });\n\n  return data;\n};\n\nconst fetchReportByTenant = (tenantId) => {\n  let data = fetch(\"/tenantReport?tenant=\" + tenantId).then(function (\n    response\n  ) {\n    return response.json();\n  });\n\n  return data;\n};\n\nconst fetchDashboardUrl = () => {\n  let data = fetch(\"/dashboardUrl\").then(function (response) {\n    if (response.status == 500) {\n      return {\n        DashboardURL: \"\",\n        InfluxdbURL: \"\",\n        DashboardURL: \"\",\n        ChronografURL: \"\",\n        ReportURL: \"\",\n        MonitorURL: \"\",\n      };\n    } else {\n      return response.json();\n    }\n  });\n\n  return data;\n};\n\nconst fetchSlavesForTenant = (tenantId) => {\n  let data = fetch(\"/slaves?tenant=\" + tenantId).then(function (response) {\n    return response.json();\n  });\n\n  return data;\n};\n\nexport {\n  fetchPostsApi,\n  fetchReportByTenant,\n  fetchDashboardUrl,\n  fetchSlavesForTenant,\n};\n","import MyContext from \"./MyContext\";\n\nimport React, { Component } from \"react\";\n\nimport { fetchReportByTenant, fetchDashboardUrl, fetchSlavesForTenant } from './provider/report';\nimport _ from 'lodash';\n\nclass MyProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reports: [],\n      slaves: [],\n      graphanaUrl: '',\n      influxdbUrl: '',\n      chronographUrl: '',\n      graphsUrl: '',\n      weaveScopeUrl: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.updateFunctions();\n    this.fetchDashboardURLS();\n  }\n\n  updateFunctions = () => {\n     this.setState({fetchSlaves: this.fetchSlaves});\n  }\n  fetchReportsForTenant = async (id) => {\n    const report = await fetchReportByTenant(id);\n    let reports = _.map(report, (item)=> {\n      return {id: id.concat(\"-\",item.date), date: item.date}\n    });\n    this.setState({ reports: reports });\n  };\n\n  fetchReportsForTenant = async (id) => {\n    const report = await fetchReportByTenant(id);\n    let reports = _.map(report, (item)=> {\n      return {id: id.concat(\"-\",item.date), date: item.date}\n    });\n    this.setState({ reports: reports });\n  };\n\n  fetchSlaves = async(tenant) => {\n    const slaves = await fetchSlavesForTenant(tenant);\n    this.setState({ slaves: slaves });\n  }\n\n  fetchDashboardURLS = async () => {\n    const dashboard = await fetchDashboardUrl();\n    this.setState({ graphanaUrl: dashboard.DashboardURL });\n    this.setState({ influxdbUrl: dashboard.InfluxdbURL });\n    this.setState({ chronographUrl: dashboard.ChronografURL });\n    this.setState({ graphsUrl: dashboard.ReportURL });\n    this.setState({ weaveScopeUrl: dashboard.MonitorURL });\n  };\n  render() {\n    return (\n      <MyContext.Provider\n        value={{\n          ...this.state,\n        }}\n      >\n        {this.props.children}\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default MyProvider;\n","import React from 'react';\nimport Main from './Main/Main';\nimport MyProvider from './MyProvider';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nfunction App() {\n  return (\n    <MyProvider>\n      <Main/>\n    </MyProvider>\n\n  );\n}\n\nexport default App;\n","import { REPORT_FETCH_TENANTS, RECEIVE_REPORT_TENANTS } from '../actionTypes';\nconst reportFetchTenants = (state = [], action) => {\n    switch (action.type) {\n        case REPORT_FETCH_TENANTS:\n          return state;\n        case RECEIVE_REPORT_TENANTS:\n          return action.tenants;\n        default:\n        return state;\n    }\n  }\n  \n  export default reportFetchTenants;","import { combineReducers } from \"redux\";\nimport reportFetchTenants from \"./report\";\n\nexport default combineReducers({ reportFetchTenants });\n\n","export const reportFetchTenantsSelector = state => state.reportFetchTenants","import { put, call, fork, select } from 'redux-saga/effects'\nimport fetch from 'isomorphic-fetch'\nimport * as actions from '../redux/actions'\nimport { reportFetchTenantsSelector } from '../redux/selectors'\n\nexport function fetchPostsApi() {\n  let data = fetch('/tenants').then(function(response) {\n    return response.json();\n  });\n  \n  //let js = await response.json();\n  //console.log(response);\n  return data;\n}\n\nexport function* reportFetchTenants() {\n  yield put(actions.reportFetchTenants());\n  const tenants = yield call(fetchPostsApi);\n  yield put(actions.receiveReportTenants(tenants))\n}\n\nexport function* startup() {\n  const selectedTenants = yield select(reportFetchTenantsSelector)\n  yield fork(reportFetchTenants, selectedTenants)\n}\n\nexport default function* root() {\n  yield fork(startup)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from './redux/store';\nimport rootSaga from './sagas';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\n\nconst store = configureStore();\nstore.runSaga(rootSaga);\n\nReactDOM.render(\n//  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>,\n // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from \"./reducers\";\nimport createSagaMiddleware from 'redux-saga'\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware()\n  return {\n    ...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\n    runSaga: sagaMiddleware.run,\n  }\n}\n\n"],"sourceRoot":""}